{"version":3,"sources":["public/firebaseConfig.js","public/user.png","config.js","components/Modal.js","components/Header.js","components/Main.js","public/Footer_logo.png","components/Footer.js","pages/main.js","components/Membership.js","pages/Membership.js","shared/App.js","client/root.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","SERVER_URL","Modal","this","props","open","close","title","className","Container","ModalHeader","Button","onClick","Close","size","ModalMain","children","Component","styled","div","button","Header","isChecked","setState","state","isOpen","console","log","openModal","event","target","name","closeModal","priceModalOpen","loginModalOpen","showMenu","userName","userToken","userTokenP","userImage","usericon","user","bind","closeMenu","signOut","signIn","preventDefault","stopPropagation","requestProfile","document","removeEventListener","addEventListener","dropdownMenu","contains","a","localStorage","getItem","axios","get","config","headers","authentication","then","response","data","token","tokenP","photoURL","setItem","uid","plan","isBill","catch","error","onAuthStateChanged","currentUser","getIdToken","refreshProfile","removeItem","provider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","result","credential","za","toast","success","code","message","email","background","to","src","alt","ResponsiveContext","Consumer","Nav","Anchor","Menu","color","direction","label","href","Avatar","style","width","height","primary","Google","FacebookOption","type","value","marginRight","rel","ref","element","completed","isLabelVisible","bgColor","margin","gap","justify","align","MypageButton","mobileButton","borderRadius","padding","backgroundColor","textAlign","LanguageDetect","require","Main","NoticeWriteIcon","outputKorean","warning","onCopied","copied","warn","input","output","outputEnglish","loading","options","selectOptions","Main_character","Place","Time","Main_Events","Material","Start","tempLength","tempWrite","progress","isHuman","isChange","isSider","before_selectOptions","before_Main_character","before_Place","before_Time","before_Main_Events","before_Material","before_outputEnglish","handleChange","requestcontents","onSelect","resetData","handleStory","e","length","lngDetector","detect","language","story","post","Story","timeout","info","status","icon","progressStyle","errorCode","next","Grid","fill","rows","columns","areas","start","end","FormEdit","cursor","Box","gridArea","animation","duration","SiderStyle","defaultValue","onChange","disabled","placeholder","Spinner","readOnly","Update","text","onCopy","Copy","LinkNext","MobileSider","gColor","FormSubtract","FormDown","boxShadow","overflow","Footer","pad","footerStyle","footerLogo","Facebook","Instagram","justifyContent","alignItems","Membership","split","Price","openModalPay","free","basic","premium","cardNum","buyerName","idNum","cardExpire","cardCvc","cardPwd","handleNumber","requestBill","changeBill","isNaN","now","Date","replaceAll","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Math","random","option","arsUseYn","mid","moid","userId","resultCode","resultMsg","Error","billKey","put","sizes","count","Card","Text","weight","cardNumberInputProps","cardExpiryInputProps","onError","err","cardCVCInputProps","fieldClassName","fieldStyle","containerStyle","borderBottom","maxLength","payButton","paddingTop","useContext","App","exact","path","component","Root","basename","process","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","fontSize","transition","Flip","ReactDOM","render","StrictMode","Grommet","theme","grommet","getElementById"],"mappings":"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","file":"static/js/main.1bd51bf4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDa7N9IBIGCSsDHHWzF8OjDvy1YZ9LszbQ\",\r\n  authDomain: \"webnovel-2fced.firebaseapp.com\",\r\n  projectId: \"webnovel-2fced\",\r\n  storageBucket: \"webnovel-2fced.appspot.com\",\r\n  messagingSenderId: \"268198427687\",\r\n  appId: \"1:268198427687:web:48678f494b6060cff02202\",\r\n  measurementId: \"G-0MWXK0Q94K\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase; // 소셜로그인\r\nexport const authService = firebase.auth(); // 로그인 모듈\r\n\r\n","export default __webpack_public_path__ + \"static/media/user.f4aa51de.png\";","//export const SERVER_URL = 'http://localhost:5000/api/v1';\r\n//export const SERVER_URL = 'http://hojoondev.kro.kr:5000/api/v1';\r\n// export const SERVER_URL = 'https://appplatform.cafe24.com:5000/api/v1';\r\nexport const SERVER_URL = 'https://veryshort.best:5051/api/v1'\r\n","import { Component } from 'react';\r\nimport '../style/Modal.css';\r\nimport styled from 'styled-components'\r\nimport { Close } from 'grommet-icons';\r\n\r\nexport class Modal extends Component {\r\n\r\n  \r\n    render() {\r\n          // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\r\n        const { open, close, title } = this.props;\r\n\r\n        return (\r\n            <div className={ open ? 'openModal modal': 'modal' }>\r\n                { open ? (  \r\n                    <Container>\r\n                        <ModalHeader>\r\n                            <Button onClick={close} > <Close size=\"15px\"/> </Button>\r\n                        </ModalHeader>\r\n                        <ModalMain>\r\n                            <h3>{title}</h3>\r\n                            {this.props.children}\r\n                        </ModalMain>\r\n                    </Container>\r\n                ) : null }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n\r\nconst Container = styled.div`\r\n    max-width: 900px;\r\n    // min-width: 250px;\r\n    // max-height: 70%;\r\n    // min-height: 100px;\r\n    margin:0 auto;\r\n    border-radius: 10px;\r\n    background-color: #fff;\r\n    \r\n    \r\n    /* 팝업이 열릴때 스르륵 열리는 효과 */\r\n    animation: modal-show 0.3s;\r\n    overflow: hidden;\r\n\r\n\r\n    @keyframes modal-show {\r\n        from {\r\n            opacity: 0;\r\n            margin-top: -50px;\r\n        }\r\n        to {\r\n            opacity: 1;\r\n            margin-top: 0;\r\n        }\r\n    }\r\n` \r\n\r\nconst ModalHeader = styled.div`\r\n    display: flex;\r\n    align-items : center;\r\n    justify-content: flex-end;\r\n    padding: 10px 20px;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n    // border-bottom : 1px solid #ededed;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color : transparent;  \r\n  outline: none;\r\n  cursor: pointer;\r\n  border: 0;\r\n`\r\nconst ModalMain = styled.div`\r\n\r\n    padding: 16px 20px;\r\n    border-bottom: 1px solid #ffffff;\r\n    border-top: 1px solid #ffffff;\r\n        \r\n    > h3 {\r\n        text-align: center;\r\n        color : #090909;\r\n        padding-bottom: 25px;\r\n        // padding: 10px 0 15px 0;\r\n        font-family: 'Noto Sans KR', sans-serif; \r\n    }\r\n`\r\n","import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { authService, firebaseInstance } from \"../public/firebaseConfig\";\r\nimport { toast } from \"react-toastify\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport \"../style/Header.css\";\r\nimport usericon from \"../public/user.png\";\r\n\r\nimport * as config from \"../config\";\r\nimport Modal from \"./Modal\";\r\n//import { GoogleLogin } from 'react-google-login';\r\nimport {\r\n  Header as HeaderLayout,\r\n  Nav,\r\n  Anchor,\r\n  Button,\r\n  Avatar,\r\n  ResponsiveContext,\r\n  Box,\r\n} from \"grommet\";\r\nimport { Google, FacebookOption, Menu } from \"grommet-icons\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n      userName: \"로그인 되지 않은 사용자\",\r\n      userToken: 0,\r\n      userTokenP: 0,\r\n      userImage: usericon,\r\n      priceModalOpen: false,\r\n      loginModalOpen: false,\r\n      user: false,\r\n      isChecked: false,\r\n      isOpen: false,\r\n    };\r\n    this.showMenu = this.showMenu.bind(this);\r\n    this.closeMenu = this.closeMenu.bind(this);\r\n    this.signOut = this.signOut.bind(this);\r\n    this.signIn = this.signIn.bind(this);\r\n    this.openModal = this.openModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.isChecked = this.isChecked.bind(this);\r\n    this.isOpen = this.isOpen.bind(this);\r\n  }\r\n\r\n  isChecked = () => {\r\n    this.setState({ isChecked: !this.state.isChecked });\r\n  \r\n  };\r\n\r\n  isOpen = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n    console.log(this.state.isOpen);\r\n  };\r\n\r\n  openModal = (event) => {\r\n    this.setState({ [event.target.name]: true });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ priceModalOpen: false });\r\n    this.setState({ loginModalOpen: false });\r\n  };\r\n\r\n  showMenu(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.requestProfile();\r\n\r\n    if (this.state.showMenu) {\r\n      this.setState({ showMenu: false });\r\n      document.removeEventListener(\"click\", this.closeMenu);\r\n    } else {\r\n      this.setState({ showMenu: true });\r\n      document.addEventListener(\"click\", this.closeMenu);\r\n    }\r\n  }\r\n\r\n  closeMenu(event) {\r\n    event.preventDefault();\r\n\r\n    if (!this.dropdownMenu.contains(event.target)) {\r\n      this.setState({ showMenu: false });\r\n      document.removeEventListener(\"click\", this.closeMenu);\r\n    }\r\n  }\r\n\r\n  async requestProfile() {\r\n    let user = await localStorage.getItem(\"token\");\r\n    \r\n    if (user !== null) {\r\n      axios\r\n        .get(`${config.SERVER_URL}/profile`, {\r\n          headers: { authentication: user },\r\n          \r\n        })\r\n        .then((response) => {\r\n          // console.log(response);\r\n          this.setState({ user: true });\r\n          this.setState({ userName: response.data.name });\r\n          this.setState({ userToken: response.data.token });\r\n          this.setState({ userTokenP: response.data.tokenP });\r\n          this.setState({ userImage: response.data.photoURL });\r\n          localStorage.setItem(\"userUid\", response.data.uid);\r\n          localStorage.setItem(\"plan\", response.data.plan);\r\n          localStorage.setItem(\"isBill\", response.data.isBill);\r\n          \r\n          this.closeModal();\r\n          \r\n        })\r\n        .catch((error) => {});\r\n    }\r\n  }\r\n\r\n  async refreshProfile() {\r\n    authService.onAuthStateChanged(async (user) => {\r\n      if (authService.currentUser) {\r\n        authService.currentUser\r\n          .getIdToken()\r\n          .then(async (data) => {\r\n            await localStorage.setItem(\"token\", data);\r\n          })\r\n          .catch(async (error) => {\r\n            //console.log(error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  //첫 렌더링 마친 후 호출하는 메서드.\r\n  async componentDidMount() {\r\n    await this.refreshProfile();\r\n    await this.requestProfile();\r\n  }\r\n\r\n  async signOut() {\r\n    await localStorage.removeItem(\"token\");\r\n    this.setState({ user: false });\r\n    this.setState({ showMenu: false });\r\n    document.removeEventListener(\"click\", this.closeMenu);\r\n    await authService.signOut();\r\n  }\r\n\r\n  async signIn(event) {\r\n    if (this.state.isChecked === true) {\r\n      const {\r\n        target: { name },\r\n      } = event;\r\n      let provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      if (name === \"Facebook\") {\r\n        provider = new firebaseInstance.auth.FacebookAuthProvider();\r\n      } else if (name === \"Google\") {\r\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n      }\r\n\r\n      await authService\r\n        .signInWithPopup(provider)\r\n        .then(async (result) => {\r\n          /** @type {firebase.auth.OAuthCredential} */\r\n          let credential = result.credential;\r\n          let user = result.user;\r\n          //console.log(credential);\r\n          //console.log(user.za);\r\n          //console.log(credential.idToken);\r\n          await localStorage.setItem(\"token\", user.za);\r\n          this.setState({ user: true });\r\n          toast.success(\r\n            `로그인 되었습니다!`,);\r\n          this.requestProfile();\r\n        })\r\n        .catch((error) => {\r\n          let errorCode = error.code;\r\n          let errorMessage = error.message;\r\n          let email = error.email;\r\n          let credential = error.credential;\r\n        });\r\n    } else {\r\n      toast.error('이용약관 및 개인정보처리방침에 동의해주세요!');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <HeaderLayout background='#fff' className='header'>\r\n          <Link to='/' className='logo'>\r\n            <img src='/logo.png' alt='logo' />\r\n          </Link>\r\n          <ResponsiveContext.Consumer>\r\n            {(size) =>\r\n              size === \"small\" ? (\r\n                <Nav>\r\n                  <Anchor>\r\n                    <Menu color='brand' size='medium' onClick={this.isOpen} />\r\n                  </Anchor>\r\n                </Nav>\r\n              ) : (\r\n                <Nav direction='row' className='Menu'>\r\n                  <Anchor\r\n                    color='#3b2479'\r\n                    label='Membership'\r\n                    href='/membership'\r\n                  ></Anchor>\r\n\r\n                  {localStorage.getItem(\"token\") ? (\r\n                    <Anchor className='profile' onClick={this.showMenu}>\r\n                      <Avatar\r\n                        src={this.state.userImage}\r\n                        className='profileicon'\r\n                        style={{ width: \"40px\", height: \"40px\" }}\r\n                      />\r\n                    </Anchor>\r\n                  ) : (\r\n                    <Button\r\n                      label='Login'\r\n                      className='login'\r\n                      onClick={this.openModal}\r\n                      name='loginModalOpen'\r\n                      primary\r\n                    />\r\n                  )}\r\n                </Nav>\r\n              )\r\n            }\r\n          </ResponsiveContext.Consumer>\r\n        </HeaderLayout>\r\n\r\n        <Modal\r\n          open={this.state.loginModalOpen}\r\n          close={this.closeModal}\r\n          title='Login'\r\n        >\r\n          <div className='AvatarBox'>\r\n            <img src={usericon} alt='singinUser' className='loginAvatar' />\r\n          </div>\r\n\r\n          <div className='signBox'>\r\n            <button onClick={this.signIn} className='googleButton'>\r\n              <Google color='plain' size='medium' /> Sign in with Google\r\n            </button>\r\n\r\n            <div className='signBox'>\r\n              <button onClick={this.signIn} className='facebookButton'>\r\n                <FacebookOption color='plain' size='medium' /> Sign in with\r\n                Facebook\r\n              </button>\r\n            </div>\r\n            <div className='isChecked'>\r\n              <input\r\n                type='checkbox'\r\n                name='agree'\r\n                value={this.state.isChecked}\r\n                onClick={this.isChecked}\r\n                style={{ width: \"18px\", height: \"18px\", marginRight: \"5px\" }}\r\n              />\r\n              <a\r\n                href='https://appplatform.notion.site/8be8232fff0341799cf8c13728610b6b'\r\n                target='_blank'\r\n                rel='noreferrer'\r\n              >\r\n                이용약관\r\n              </a>\r\n              과 &nbsp;\r\n              <a\r\n                href='https://www.notion.so/appplatform/d99f247a66d141bbbdf227739861a0a2'\r\n                target='_blank'\r\n                rel='noreferrer'\r\n              >\r\n                개인정보처리방침\r\n              </a>\r\n              에&nbsp;동의합니다.\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n\r\n        {this.state.showMenu ? (\r\n          <div\r\n            ref={(element) => {\r\n              this.dropdownMenu = element;\r\n            }}\r\n          >\r\n            <div className='afterLogin'>\r\n              <div className='Username'>\r\n                <p>{this.state.userName}</p>\r\n              </div>\r\n              <div className='token'>\r\n                <ProgressBar\r\n                  completed={this.state.userTokenP}\r\n                  height='8px'\r\n                  isLabelVisible={false}\r\n                  bgColor='#7D4CDB'\r\n                  margin='5px 0'\r\n                />\r\n                <span>{this.state.userToken} token</span>\r\n                <p>{localStorage.getItem(\"plan\")}</p>\r\n              </div>\r\n              <div className='logout'>\r\n                <Button primary label='logout' onClick={this.signOut}></Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n    <ResponsiveContext.Consumer>\r\n      {(size) => size === 'small' && this.state.isOpen && (\r\n          <Nav gap=\"small\" direction='column' className='Menu' justify=\"center\" align=\"center\">\r\n            <Anchor\r\n              className=\"MobileMem\"\r\n              color='#3b2479'\r\n              label='Membership'\r\n              href='/membership'\r\n            ></Anchor>\r\n            {localStorage.getItem(\"token\") ? (\r\n              <Anchor \r\n              className='profile' \r\n              label='My Page'\r\n              style={MypageButton}\r\n              onClick={this.showMenu}>\r\n                {/* <Avatar\r\n                  src={this.state.userImage}\r\n                  className='profileicon'\r\n                  style={{ width: \"40px\", height: \"40px\" }}\r\n                /> */}\r\n              </Anchor>\r\n            ) : (\r\n              <Button\r\n                style={mobileButton}\r\n                label='Login'\r\n                className='login'\r\n                onClick={this.openModal}\r\n                name='loginModalOpen'\r\n                primary\r\n              />\r\n            )}\r\n          </Nav>\r\n        )}\r\n        </ResponsiveContext.Consumer>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\nconst mobileButton = {\r\n  width: '100%',\r\n  borderRadius: 0,\r\n  padding: '10px 0',\r\n  \r\n}\r\n\r\nconst MypageButton = {\r\n  // backgroundColor:'#3b2479',\r\n  backgroundColor:'#7D4CDB',\r\n  color: '#fff',\r\n  width: '100%',\r\n  borderRadius: 0,\r\n  padding: '10px 0',\r\n  textAlign: 'center'\r\n}","import { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Spinner } from \"react-loading-io\";\r\nimport { authService, firebaseInstance } from \"../public/firebaseConfig\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport * as config from \"../config\";\r\nimport { toast } from \"react-toastify\";\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport \"../style/Main.css\";\r\n\r\nimport { Grid, Box, ResponsiveContext } from \"grommet\";\r\nimport {\r\n  FormEdit,\r\n  FormDown,\r\n  FormSubtract,\r\n  LinkNext,\r\n  Update,\r\n  Info,\r\n  Copy,\r\n} from \"grommet-icons\";\r\n\r\nconst LanguageDetect = require(\"languagedetect\");\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      output: \"\",\r\n      outputEnglish: \"\",\r\n      outputKorean: \"\",\r\n      loading: false,\r\n      options: [\"판타지\", \"현판\", \"무협\", \"미스터리\", \"로판\"],\r\n      selectOptions: \"\",\r\n      Main_character: \"\",\r\n      Place: \"\",\r\n      Time: \"\",\r\n      Main_Events: \"\",\r\n      Material: \"\",\r\n      Start: \"Create a story\",\r\n      tempLength: 0,\r\n      tempWrite: \"\",\r\n      progress: 0,\r\n      isHuman: false,\r\n      isChange: false,\r\n      isSider: false,\r\n      copied: false,\r\n\r\n      before_selectOptions: \"판타지\",\r\n      before_Main_character: \"\",\r\n      before_Place: \"\",\r\n      before_Time: \"\",\r\n      before_Main_Events: \"\",\r\n      before_Material: \"\",\r\n      before_outputEnglish: \"\",\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.requestcontents = this.requestcontents.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.resetData = this.resetData.bind(this);\r\n    this.handleStory = this.handleStory.bind(this);\r\n  }\r\n\r\n  NoticeWriteIcon = () => {\r\n    if (this.state.outputKorean === \"\") {\r\n      toast.warning(\"연필 아이콘을 눌러 키워드를 넣어주세요!\");\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  onCopied = () => {\r\n    if (this.state.outputKorean !== \"\") {\r\n      this.setState({ copied: true });\r\n    } else {\r\n      toast.warn(\"연필 아이콘을 눌러 키워드를 넣어주세요!\");\r\n    }\r\n  };\r\n\r\n  handleChange(e) {\r\n    if (e.target.value.length < 20 && e.target.name === \"Main_Events\") {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    } else if (e.target.value.length < 10) {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    } else {\r\n      toast.error(`${e.target.value.length}글자를 넘어갈 수 없어요!😭 `);\r\n    }\r\n  }\r\n\r\n  async handleStory(e) {\r\n    this.setState({ outputKorean: e.target.value });\r\n    this.setState({ isChange: true });\r\n\r\n    if (this.state.isHuman === false) {\r\n    \r\n      if (e.target.value.length > 0) {\r\n        this.setState({ Start: \"Need a story\" });\r\n      } else {\r\n        return\r\n        // this.setState({ Start: \"Create a story\" });\r\n      }\r\n    } else {   \r\n      const lngDetector = new LanguageDetect();\r\n      const language = await lngDetector.detect(this.state.outputKorean, 1);\r\n     \r\n      if (this.state.progress >= 100) {\r\n        this.setState({ Start: \"Continue\" });\r\n        \r\n      }\r\n\r\n      if (language[0] === \"english\") {\r\n        this.setState({\r\n          progress:\r\n            ((this.state.outputKorean.length - this.state.tempLength) * 100) /\r\n            150,\r\n        });\r\n        \r\n      } else {\r\n        this.setState({\r\n          progress:\r\n            ((this.state.outputKorean.length - this.state.tempLength) * 100) /\r\n            100,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onSelect(e) {\r\n    this.setState({ selectOptions: e.target.value });\r\n  }\r\n\r\n  async refreshProfile() {\r\n    authService.onAuthStateChanged(async (user) => {\r\n      if (authService.currentUser) {\r\n        authService.currentUser\r\n          .getIdToken()\r\n          .then(async (data) => {\r\n            await localStorage.setItem(\"token\", data);\r\n          })\r\n          .catch(async (error) => {\r\n            //console.log(error);\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async requestcontents(e) {\r\n    await this.refreshProfile();\r\n    \r\n    if (this.state.isHuman === true && this.state.progress < 100) {\r\n      toast.error(`추가 이야기의 길이(${100-this.state.progress}자)가 부족해요😭`);\r\n      return;\r\n    } else {\r\n      this.setState({ isHuman: false });\r\n      this.setState({ progress: 0 });\r\n    }\r\n\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      let story = this.state.outputEnglish;\r\n      let selectOptions = this.state.selectOptions;\r\n      let Main_character = this.state.Main_character;\r\n      let Place = this.state.Place;\r\n      let Time = this.state.Time;\r\n      let Main_Events = this.state.Main_Events;\r\n      let Material = this.state.Material;\r\n\r\n      if (this.state.isChange === true) {\r\n        story = this.state.outputKorean;\r\n      }\r\n\r\n      // if (e.target.name === \"reset\") {\r\n      //   console.log('reset');\r\n      //   selectOptions = this.state.before_selectOptions;\r\n      //   Main_character = this.state.before_Main_character;\r\n      //   Place = this.state.before_Place;\r\n      //   Time = this.state.before_Time;\r\n      //   Main_Events = this.state.before_Main_Events;\r\n      //   Material = this.state.before_Material;\r\n      //   story = this.state.before_outputEnglish;\r\n      //   await this.setState({ selectOptions: selectOptions });\r\n      //   await this.setState({ Main_character: Main_character });\r\n      //   await this.setState({ Place: Place });\r\n      //   await this.setState({ Time: Time });\r\n      //   await this.setState({ Main_Events: Main_Events });\r\n      //   await this.setState({ Material: Material });\r\n      //   await this.setState({ outputEnglish: story });\r\n      // }\r\n\r\n      if(selectOptions === \"\") {\r\n        toast.error(`장르를 선택해 주세요!`);\r\n        return;\r\n      } else if (Main_character === \"\") {\r\n        toast.error(`주인공을 입력해 주세요!`);\r\n        return;\r\n      } else if (Place === \"\") {\r\n        toast.error(`장소를 입력해 주세요!`);\r\n        return;\r\n      } else if (Time === \"\") {\r\n        toast.error(`시간대를 입력해 주세요!`);\r\n        return;\r\n      } else if (Main_Events === \"\") {\r\n        toast.error(`주요 사건을 입력해 주세요!`);\r\n        return;\r\n      } else if (Material === \"\") {\r\n        toast.error(`소재를 입력해 주세요!`);\r\n        return;\r\n      }\r\n      this.setState({ loading: true });\r\n      axios\r\n        .post(\r\n          `${config.SERVER_URL}/complation`,\r\n          {\r\n            selectOptions: selectOptions,\r\n            Main_character: Main_character,\r\n            Place: Place,\r\n            Time: Time,\r\n            Main_Events: Main_Events,\r\n            Material: Material,\r\n            isChange: this.state.isChange,\r\n            Story: story,\r\n          },\r\n          {\r\n            headers: { authentication: localStorage.getItem(\"token\") },\r\n            timeout: 100000,\r\n          }\r\n        )\r\n        .then((response) => {\r\n         \r\n          this.setState({\r\n            outputKorean: this.state.outputKorean + response.data[0],\r\n          });\r\n          this.setState({\r\n            outputEnglish: this.state.outputEnglish + response.data[1],\r\n          });\r\n          this.setState({\r\n            output:\r\n              this.state.outputKorean + \"\\n\\n원본\\n\" + this.state.outputEnglish,\r\n          });\r\n          this.setState({ loading: false });\r\n          this.setState({ isChange: false });\r\n          this.setState({ tempLength: this.state.outputKorean.length });\r\n          this.setState({ tempWrite: this.state.outputKorean });\r\n          this.setState({ Start: \"Need a Story\" });\r\n          this.setState({ isHuman: true });\r\n          //console.log(response.data.warn);\r\n          if (response.data[2] >= 2) {\r\n            toast.error(\r\n              `결과물에 유해한 내용이 들어가 버렸어요! 버튼을 다시 눌러주세요!`\r\n            );\r\n            this.setState({ isHuman: false });\r\n          } else {\r\n            toast.info(\r\n              `이어지는 내용을 100자 이상 쓰면, 이야기를 계속 이어갈 수 있습니다.`);\r\n          }\r\n\r\n          this.setState({ before_selectOptions: selectOptions });\r\n          this.setState({ before_Main_character: Main_character });\r\n          this.setState({ before_Place: Place });\r\n          this.setState({ before_Time: Time });\r\n          this.setState({ before_Main_Events: Main_Events });\r\n          this.setState({ before_Material: Material });\r\n          this.setState({ before_outputEnglish: story });\r\n        })\r\n        .catch((error) => {\r\n         console.log(error);\r\n          if (error.response.status === 412) {\r\n            this.setState({ loading: false });\r\n            toast.info(`로그인이 필요합니다!`, {\r\n              icon:'🙅‍♀️',\r\n              progressStyle: { backgroundColor: \"#7D4CDB\" },\r\n            });\r\n            localStorage.removeItem(\"token\");\r\n          } else {\r\n            if (\r\n              error.response.status === 403 &&\r\n              error.response.data.errorCode === \"001\"\r\n            ) {\r\n              toast.error(`이야기의 길이가 너무 길어요ㅠ`);\r\n              this.setState({ loading: false });\r\n            } else {\r\n              this.setState({ loading: false });\r\n              this.setState({ output: \"토큰이 부족합니다!\" });\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      toast.info(\"로그인 후 다시 시도해 주세요!\", {\r\n        icon:'🙅‍♀️',\r\n        progressStyle: { backgroundColor: \"#7D4CDB\" }\r\n      });\r\n      // this.setState({ output: \"로그인 후 다시 시도해 주세요!\" });\r\n    }\r\n  }\r\n\r\n  resetData() {\r\n    this.setState({ next: \"\" });\r\n    this.setState({ input: \"\" });\r\n    this.setState({ output: \"\" });\r\n    this.setState({ outputEnglish: \"\" });\r\n    this.setState({ outputKorean: \"\" });\r\n    this.setState({ Main_character: \"\" });\r\n    this.setState({ Place: \"\" });\r\n    this.setState({ Time: \"\" });\r\n    this.setState({ Main_Events: \"\" });\r\n    this.setState({ Material: \"\" });\r\n    this.setState({ copied: false });\r\n    this.setState({ progress: 0})\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className='mainpage'>\r\n          <ResponsiveContext.Consumer>\r\n            {(size) =>\r\n              size !== \"small\" ? (\r\n                /* 768px 초과 크기에서 적용  */\r\n                <Grid\r\n                  fill\r\n                  rows={[\"auto\", \"flex\"]}\r\n                  columns={[\"auto\", \"flex\"]}\r\n                  areas={[\r\n                    { name: \"sidebar\", start: [0, 1], end: [0, 1] },\r\n                    { name: \"main\", start: [1, 1], end: [1, 1] },\r\n                  ]}\r\n                >\r\n                  <div\r\n                    className=\"IconBox\"\r\n                    onClick={() => {\r\n                      this.setState({ isSider: !this.state.isSider });\r\n                    }}\r\n                  >\r\n                    <FormEdit\r\n                      color='#fff'\r\n                      size='medium'\r\n                      style={{ cursor: \"pointer\" }}\r\n                    />\r\n                    <p>\r\n                      <b>Write</b>\r\n                    </p>\r\n                  </div>\r\n                  {this.state.isSider && (\r\n                    <Box\r\n                      gridArea='sidebar'\r\n                      background='#fff'\r\n                      width='small'\r\n                      animation={[\r\n                        { type: \"fadeIn\", duration: 300 },\r\n                        { type: \"slideRight\", size: \"xlarge\", duration: 150 },\r\n                      ]}\r\n                      style={SiderStyle}\r\n                    >\r\n                      <div className='SiderBox'>\r\n                        <select\r\n                          defaultValue='default'\r\n                          className='dropdowncategory'\r\n                          onChange={this.onSelect}\r\n                        >\r\n                          <option value='default' disabled className='gradient'>\r\n                            장르를 선택해주세요! ✔\r\n                          </option>\r\n                          <option value={this.state.options[0]}>\r\n                            {this.state.options[0]}\r\n                          </option>\r\n                          <option value={this.state.options[1]}>\r\n                            {this.state.options[1]}\r\n                          </option>\r\n                          <option value={this.state.options[2]}>\r\n                            {this.state.options[2]}\r\n                          </option>\r\n                          <option value={this.state.options[3]}>\r\n                            {this.state.options[3]}\r\n                          </option>\r\n                          <option value={this.state.options[4]}>\r\n                            {this.state.options[4]}\r\n                          </option>\r\n                        </select>\r\n\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Main_character}\r\n                          onChange={this.handleChange}\r\n                          name='Main_character'\r\n                          placeholder='주요 인물'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Place}\r\n                          onChange={this.handleChange}\r\n                          name='Place'\r\n                          placeholder='장소'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Time}\r\n                          onChange={this.handleChange}\r\n                          name='Time'\r\n                          placeholder='시간'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Material}\r\n                          onChange={this.handleChange}\r\n                          name='Material'\r\n                          placeholder='소재'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Main_Events}\r\n                          onChange={this.handleChange}\r\n                          name='Main_Events'\r\n                          placeholder='주요 사건'\r\n                        ></input>\r\n                        <button\r\n                          className='create'\r\n                          onClick={this.requestcontents}\r\n                        >\r\n                          {this.state.Start}\r\n                        </button>\r\n                        <div className='progress'>\r\n                          <ProgressBar\r\n                            completed={this.state.progress}\r\n                            bgColor='#3D138D'\r\n                            width='200px'\r\n                            height='8px'\r\n                            margin='20px 0 0 0 '\r\n                            isLabelVisible={false}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </Box>\r\n                  )}\r\n                  <Box\r\n                    gridArea='main'\r\n                    background='#f9f9f9'\r\n                    justify='center'\r\n                    align='center'\r\n                  >\r\n                    {this.state.loading ? (\r\n                      <div className='loading'>\r\n                        <Spinner size={200} color='#3b2479' />\r\n                      </div>\r\n                    ):(\r\n                      <>\r\n                    <div className='outputContainer'>\r\n                      <textarea\r\n                        className='output'\r\n                        value={this.state.outputKorean}\r\n                        placeholder='write 버튼을 눌러 글을 만들어주세요!'\r\n                        onClick={this.NoticeWriteIcon}\r\n                        onChange={this.handleStory}\r\n                      ></textarea>\r\n\r\n                      <textarea\r\n                        className='output_right'\r\n                        value={this.state.outputEnglish}\r\n                        readOnly\r\n                      ></textarea>\r\n                    </div>\r\n\r\n                    <div className='ButtonDiv'>\r\n                      {/* 리셋 */}\r\n                      <Update\r\n                        size='medium'\r\n                        color='brand'\r\n                        className='iconDetail'\r\n                        onClick={this.resetData}\r\n                      />\r\n                      {/* 복사 */}\r\n                      <CopyToClipboard\r\n                        text={this.state.outputKorean}\r\n                        onCopy={this.onCopied}\r\n                      >\r\n                        <Copy\r\n                          color='brand'\r\n                          size='medium'\r\n                          className='iconDetail'\r\n                        />\r\n                      </CopyToClipboard>\r\n                      {this.state.copied ? (\r\n                        <div className='copyStyle'>Copied!</div>\r\n                      ) : null}\r\n\r\n                      {/* 이어쓰기 */}\r\n                      <LinkNext\r\n                        color='brand'\r\n                        size='medium'\r\n                        className='iconDetail'\r\n                        onClick={this.requestcontents}\r\n                      />\r\n                    </div>\r\n                    </>\r\n                    )}\r\n                  </Box>\r\n                </Grid>\r\n              ) : (\r\n                /* 768px 이하에서 적용 */\r\n                <Grid\r\n                  fill\r\n                  rows={[\"auto\", \"auto\"]}\r\n                  columns={[\"auto\"]}\r\n                  areas={[\r\n                    { name: \"sidebar\", start: [0, 0], end: [0, 0] },\r\n                    { name: \"main\", start: [0, 1], end: [0, 1] },\r\n                  ]}\r\n                >\r\n                  {this.state.isSider ? (\r\n                    <Box\r\n                      gridArea='sidebar'\r\n                      background='#fff'\r\n                      width='small'\r\n                      style={MobileSider}\r\n                      animation={[\r\n                        { type: \"fadeIn\", duration: 300 },\r\n                        { type: \"slideDown\", size: \"small\", duration: 300 },\r\n                      ]}\r\n                    >\r\n                      <div className='SiderBox'>\r\n                        <select\r\n                          defaultValue='default'\r\n                          className='dropdowncategory'\r\n                          onChange={this.onSelect}\r\n                        >\r\n                          <option value='default' disabled className='gradient'>\r\n                            장르를 선택해주세요! ✔\r\n                          </option>\r\n                          <option value={this.state.options[0]}>\r\n                            {this.state.options[0]}\r\n                          </option>\r\n                          <option value={this.state.options[1]}>\r\n                            {this.state.options[1]}\r\n                          </option>\r\n                          <option value={this.state.options[2]}>\r\n                            {this.state.options[2]}\r\n                          </option>\r\n                          <option value={this.state.options[3]}>\r\n                            {this.state.options[3]}\r\n                          </option>\r\n                          <option value={this.state.options[4]}>\r\n                            {this.state.options[4]}\r\n                          </option>\r\n                        </select>\r\n\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Main_character}\r\n                          onChange={this.handleChange}\r\n                          name='Main_character'\r\n                          placeholder='주요 인물'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Place}\r\n                          onChange={this.handleChange}\r\n                          name='Place'\r\n                          placeholder='장소'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Time}\r\n                          onChange={this.handleChange}\r\n                          name='Time'\r\n                          placeholder='시간'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Material}\r\n                          onChange={this.handleChange}\r\n                          name='Material'\r\n                          placeholder='소재'\r\n                        ></input>\r\n                        <input\r\n                          className='sub_input_text'\r\n                          value={this.state.Main_Events}\r\n                          onChange={this.handleChange}\r\n                          name='Main_Events'\r\n                          placeholder='주요 사건'\r\n                        ></input>\r\n                        <button\r\n                          className='create'\r\n                          onClick={this.requestcontents}\r\n                        >\r\n                          {this.state.Start}\r\n                        </button>\r\n                        <div className='progress'>\r\n                          <ProgressBar\r\n                            completed={this.state.progress}\r\n                            gColor='#3D138D'\r\n                            width='200px'\r\n                            height='8px'\r\n                            margin='20px 0 0 0 '\r\n                            isLabelVisible={false}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div\r\n                        className=\"IconBox\"\r\n                        onClick={() => {\r\n                          this.setState({ isSider: !this.state.isSider });\r\n                        }}\r\n                      >\r\n                        <FormSubtract\r\n                          color='#fff'\r\n                          size='medium'\r\n                          style={{ cursor: \"pointer\" }}\r\n                        />\r\n                      </div>\r\n                    </Box>\r\n                  ) : (\r\n                    <div\r\n                      className=\"IconBox\"\r\n                      onClick={() => {\r\n                        this.setState({ isSider: !this.state.isSider });\r\n                       \r\n                      }}\r\n                    >\r\n                      <FormEdit\r\n                        color='#fff'\r\n                        size='medium'\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                      <p>\r\n                        <b>Write</b>\r\n                      </p>\r\n                      <FormDown\r\n                        color='#fff'\r\n                        size='medium'\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <Box\r\n                    gridArea='main'\r\n                    background='#f9f9f9'\r\n                    justify='center'\r\n                    align='center'\r\n                  >\r\n                    {this.state.loading ? (\r\n                      <div className='loading'>\r\n                        <Spinner size={64} color='#3b2479' />\r\n                      </div>\r\n                    ) : (\r\n                      <>\r\n                        <div className='outputContainer'>\r\n                          <textarea\r\n                            className='output'\r\n                            placeholder='write 버튼을 눌러 글을 만들어주세요!'\r\n                            onClick={this.NoticeWriteIcon}\r\n                            value={this.state.outputKorean}\r\n                            onChange={this.handleStory}\r\n                          ></textarea>\r\n\r\n                          <textarea\r\n                            className='output_right'\r\n                            value={this.state.outputEnglish}\r\n                            readOnly\r\n                          ></textarea>\r\n                        </div>\r\n                        <div className='ButtonDiv'>\r\n                          {/* 리셋 */}\r\n                          <Update\r\n                            size='medium'\r\n                            color='brand'\r\n                            className='iconDetail'\r\n                            onClick={this.resetData}\r\n                          />\r\n\r\n                          {/* 복사 */}\r\n                          <CopyToClipboard\r\n                            text={this.state.outputKorean}\r\n                            onCopy={this.onCopied}\r\n                          >\r\n                            <Copy\r\n                              color='brand'\r\n                              size='medium'\r\n                              className='iconDetail'\r\n                            />\r\n                          </CopyToClipboard>\r\n                          {this.state.copied ? (\r\n                            <div className='copyStyle'>Copied!</div>\r\n                          ) : null}\r\n                          {/* 이어쓰기 */}\r\n                          <LinkNext\r\n                            color='brand'\r\n                            size='medium'\r\n                            className='iconDetail'\r\n                            onClick={this.requestcontents}\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </Box>\r\n                </Grid>\r\n              )\r\n            }\r\n          </ResponsiveContext.Consumer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\nconst SiderStyle = {\r\n  width: \"250px\",\r\n  boxShadow: \"2px 3px 8px #EDEDED\",\r\n};\r\n\r\nconst MobileSider = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  overflow: \"scroll\",\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Footer_logo.4c1669b6.png\";","import { React, Component } from \"react\";\r\nimport \"../style/Footer.css\";\r\nimport { Footer as FooterLayout, Box } from \"grommet\";\r\nimport { Facebook, Instagram } from \"grommet-icons\";\r\nimport footerLogo from \"../public/Footer_logo.png\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <FooterLayout\r\n          className=\"MobileFooterContainer\"\r\n          direction=\"row\"\r\n          background=\"light-2\"\r\n          pad=\"large\"\r\n          style={footerStyle}\r\n        >\r\n          <Box direction=\"row\" gap=\"medium\" className=\"MobileFooter\">\r\n            <div className=\"InfoBox\">\r\n              <p>\r\n                <b>㈜Appplatform</b>\r\n              </p>\r\n              <p>대표 : 김춘남</p>\r\n              <p>사업자 번호 : 115-87-01388</p>\r\n              <p>전화 : 02-6959-4330</p>\r\n            </div>\r\n\r\n            <div className=\"InfoBox\">\r\n              <p>\r\n                <b>주소</b>\r\n              </p>\r\n              <p>서울 서초구 반포대로28길</p>\r\n              <p>56-6, 3층 301호</p>\r\n              <p>301, 56-6, Banpo-daero 28-gil, </p>\r\n              <p>Seocho-gu, Seoul, Korea</p>\r\n            </div>\r\n          </Box>\r\n          <Box direction=\"row\" gap=\"medium\" className=\"MobileFooter\">\r\n            <div className=\"InfoBox\">\r\n              <p>\r\n                <b>정책</b>\r\n              </p>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://www.notion.so/appplatform/d99f247a66d141bbbdf227739861a0a2\"\r\n              >\r\n                <p>개인정보 처리방침</p>\r\n              </a>\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://appplatform.notion.site/8be8232fff0341799cf8c13728610b6b\"\r\n              >\r\n                {\" \"}\r\n                <p>이용약관</p>\r\n              </a>\r\n              <a href=\"mailto:support@appplatform.co.kr\">\r\n                support@appplatform.co.kr{\" \"}\r\n              </a>\r\n            </div>\r\n\r\n            <img src={footerLogo} alt=\"footer_logo\" className=\"footer-logo\" />\r\n          </Box>\r\n        </FooterLayout>\r\n        <FooterLayout\r\n          className=\"Mobilefooter MobileCopyRight\"\r\n          background=\"light-3\"\r\n          pad=\"medium\"\r\n          justify=\"center\"\r\n          align=\"center\"\r\n        >\r\n          <p className=\"copyRight\">©Appplatform, Inc All Rights Reserved</p>\r\n          <Box direction=\"row\" gap=\"small\" className=\"Icon\">\r\n            <Facebook size=\"medium\" />\r\n            <Instagram size=\"medium\" />\r\n          </Box>\r\n        </FooterLayout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n\r\nconst footerStyle = {\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n","import React from 'react';\r\nimport Header from '../components/Header.js';\r\nimport Mainapi from '../components/Main.js';\r\nimport Footer from '../components/Footer.js';\r\n\r\n\r\nconst Main = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <Mainapi/>\r\n      <Footer/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;","import { Component} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CreditCardInput from \"react-credit-card-input\";\r\nimport { authService, firebaseInstance } from \"../public/firebaseConfig\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../style/Membership.css\";\r\nimport Modal from \"./Modal\";\r\nimport * as config from \"../config\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport { Box, Grid, Text } from \"grommet\";\r\n\r\n\r\nclass Membership extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n      plan: \"free\",\r\n      free: \"\",\r\n      basic: \"가입하기\",\r\n      premium: \"가입하기\",\r\n      cardNum: \"\",\r\n      buyerName: \"\",\r\n      idNum: \"\",\r\n      cardExpire: \"\",\r\n      cardCvc: \"\",\r\n      cardPwd: \"\",\r\n      Price: \"\",\r\n    };\r\n    this.openModal = this.openModal.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleNumber = this.handleNumber.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n    this.requestBill = this.requestBill.bind(this);\r\n    this.changeBill = this.changeBill.bind(this);\r\n    this.requestProfile = this.requestProfile.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleNumber(e) {\r\n    if (isNaN(e.target.value) === false) {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n  }\r\n\r\n  openModal = (e) => {\r\n    authService.onAuthStateChanged(async (user) => {\r\n      if (authService.currentUser) {\r\n        authService.currentUser\r\n          .getIdToken()\r\n          .then(async (data) => {\r\n            await localStorage.setItem(\"token\", data);\r\n            console.log('names',e.target.name);\r\n            // console.log(e.target.name.split(\" \")[0]);\r\n            // console.log(e.target.name.split(\" \")[1]);\r\n            this.setState({ plan: e.target.name.split(\" \")[0] });\r\n            this.setState({ Price: e.target.name.split(\" \")[1] });\r\n            this.setState({ showMenu: true });\r\n          })\r\n          .catch(async (error) => {\r\n            toast.info(`로그인이 필요합니다!`, {\r\n              style:{backgroundColor:'#fff', color:'#000'},\r\n               progressStyle:{backgroundColor:'#7D4CDB'}\r\n              });\r\n          });\r\n      } else {\r\n        toast.info(`로그인이 필요합니다!`, {\r\n          style:{backgroundColor:'#fff', color:'#000'},\r\n           progressStyle:{backgroundColor:'#7D4CDB'}\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  openModalPay = (e) => {\r\n    this.setState({ showMenu: true });\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ showMenu: false });\r\n  };\r\n\r\n  async requestBill() {\r\n    let user = await localStorage.getItem(\"token\");\r\n\r\n    if (user !== null) {\r\n      if(this.state.plan === 'free') {\r\n        toast.info('free는 결제 할 수 없어요!');\r\n      }else{\r\n      const now = new Date();\r\n      const option = {\r\n        arsUseYn: \"N\",\r\n        buyerName: this.state.buyerName, //등록자 이름\r\n        cardExpire:\r\n          this.state.cardExpire.split(\" / \")[1] +\r\n          this.state.cardExpire.split(\" / \")[0], //유효기간\r\n        cardNum: this.state.cardNum.replaceAll(\" \", \"\"), //카드번호 (숫자)\r\n        cardPwd: this.state.cardPwd, //카드 비밀번호 앞 2 자리\r\n        idNum: this.state.idNum, //주민번호 앞 6 자리\r\n        mid: \"arstest03m\", //상점 아이디\r\n        moid:\r\n          now.getFullYear() +\r\n          \"\" +\r\n          (now.getMonth() + 1) +\r\n          now.getDate() +\r\n          now.getHours() +\r\n          now.getMinutes() +\r\n          now.getSeconds(), //가맹점 주문번호\r\n        userId: (await localStorage.getItem(\"userUid\")) + Math.random(),\r\n      };\r\n      axios\r\n        .post(`https://api.innopay.co.kr/api/regAutoCardBill`, option)\r\n        .then((response) => {\r\n         \r\n          let data = response.data;\r\n          //  console.log('test',data);\r\n          if(data.resultCode === 'F113') {\r\n            toast.error(`error : ${data.resultMsg}!`)\r\n          }\r\n          if(data.resultCode === \"9999\") {\r\n            toast.error('해당 카드 번호로 3회 실패된 이력이 있어 다음 날 요청 가능합니다😭');\r\n          }\r\n\r\n          if (data.resultCode === \"0000\") {\r\n            axios\r\n              .post(\r\n                `${config.SERVER_URL}/pay`,\r\n                {\r\n                  billKey: data.billKey,\r\n                  plan: this.state.plan,\r\n                  name: this.state.buyerName,\r\n                },\r\n                { headers: { authentication: user } }\r\n              )\r\n              .then((response) => {\r\n                console.log('response',response);\r\n                toast.success('결제가 완료 됐습니다!');\r\n                this.closeModal();\r\n              })\r\n              .catch((error) => {\r\n                //console.log('망했어요!'); <-오류 이쪽\r\n                console.log('error',error);\r\n                \r\n              });\r\n          } else {\r\n            \r\n            throw new Error();\r\n          }\r\n          this.closeModal();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          this.closeModal();\r\n        });\r\n    }\r\n  }\r\n  }\r\n\r\n  async changeBill() {\r\n    let user = await localStorage.getItem(\"token\");\r\n    if (user !== null) {\r\n      axios\r\n        .put(\r\n          `${config.SERVER_URL}/pay`,\r\n          {\r\n            plan: this.state.plan,\r\n          },\r\n          { headers: { authentication: user } }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          this.closeModal();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  async requestProfile() {\r\n    let user = await localStorage.getItem(\"token\");\r\n\r\n    if (user !== null) {\r\n      axios\r\n        .get(`${config.SERVER_URL}/profile`, {\r\n          headers: { authentication: user },\r\n        })\r\n        .then((response) => {\r\n          localStorage.setItem(\"userUid\", response.data.uid);\r\n          localStorage.setItem(\"plan\", response.data.plan);\r\n          this.closeModal();\r\n        })\r\n        .catch((error) => {});\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.requestProfile();\r\n    this.setState({ free: \"change\" });\r\n    this.setState({ [localStorage.getItem(\"plan\")]: \"currunt\" });\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <Box\r\n          width='100%'\r\n          height={this.props.sizes !== 'small' ? '100vh' : '100%'}\r\n          background='#f9f9f9'\r\n          direction='column'\r\n          justify='evenly'\r\n          align='center'\r\n          overflow=\"scroll\"\r\n          pad=\"large\"\r\n        >\r\n          <Box \r\n          justify='center' \r\n          align='center' \r\n          pad=\"large\"\r\n         \r\n          >\r\n            <h1 className='MenuMark'>Membership</h1>\r\n            <div className='DecoBox'></div>\r\n          </Box>\r\n          \r\n          <Box \r\n          className=\"MobileCardContainer\"\r\n          justify='center'\r\n          align='center' \r\n          direction=\"row-responsive\">\r\n          <Grid\r\n              columns={this.props.sizes !== 'small' ? ({\r\n                count: 3,\r\n                size: \"auto\",\r\n              }) : '100%'}\r\n              gap='small'\r\n            >\r\n              <Card>\r\n                <div className='CardTitle'>\r\n                  <h2>Free</h2>\r\n                </div>\r\n                  <div className='CardPrice'>\r\n                    <Text size='2xl' color='#000' weight='bold'>\r\n                      ₩0\r\n                    </Text>\r\n                    <Text size='small' color='dark-3'>\r\n                      /month\r\n                    </Text>\r\n                  </div>\r\n                  <div style={{ textAlign: \"center\", padding: '20px'  }}>\r\n                    <button\r\n                      className='PriceButton'\r\n                      onClick={this.openModal}\r\n                      name='free 0'\r\n                    >\r\n                      {this.state.free}\r\n                    </button>\r\n                  </div>\r\n                  <div className='CardContent'>\r\n                    <p>✔ 장르 선택 및 주인공 입력 가능</p>\r\n                    <p>✔ 장소, 시간, 주제, 사건 입력 가능</p>\r\n                    <p>✔ 이어쓰기 2-3회 제공</p>\r\n                  </div>\r\n                \r\n              </Card>\r\n\r\n              <Card>\r\n                <div className='CardTitle'>\r\n                  <h2>Basic</h2>\r\n                </div>\r\n                <div className='CardPrice'>\r\n                  <Text size='xlarge' color='#000' weight='bold'>\r\n                    ₩10,000\r\n                  </Text>\r\n                  <Text size='small' color='dark-3'>\r\n                    /month\r\n                  </Text>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", padding: '20px'  }}>\r\n                  <button\r\n                    className='PriceButton'\r\n                    onClick={this.openModal}\r\n                    name='basic 10000'\r\n                  >\r\n                    {this.state.basic}\r\n                  </button>\r\n                </div>\r\n                <div className='CardContent'>\r\n                  <p>✔ 장르 선택 및 주인공 입력 가능</p>\r\n                  <p>✔ 장소, 시간, 주제, 사건 입력 가능</p>\r\n                  <p>✔ 이어쓰기 및 이야기 완성 가능</p>\r\n                  <p>✔ 이야기 2개 이상 창작 가능</p>\r\n                  <p>(이야기 한개당 최대 길이 a4 2장)</p>\r\n                </div>\r\n                \r\n              </Card>\r\n\r\n              <Card>\r\n                <div className='CardTitle'>\r\n                  <h2>Premium</h2>\r\n                </div>\r\n                  <div className='CardPrice'>\r\n                    <Text size='xlarge' color='#000' weight='bold'>\r\n                      ₩30,000\r\n                    </Text>\r\n                    <Text size='small' color='dark-3'>\r\n                      /month\r\n                    </Text>\r\n                  </div>\r\n                  <div style={{ textAlign: \"center\", padding: '20px' }}>\r\n                    <button\r\n                      className='PriceButton'\r\n                      onClick={this.openModal}\r\n                      name='premium 30000'\r\n                    >\r\n                      {this.state.premium}\r\n                    </button>\r\n                  </div>\r\n                  <div className='CardContent'>\r\n                    <p>✔ 장르 선택 및 주인공 입력 가능</p>\r\n                    <p>✔ 장소, 시간, 주제, 사건 입력 가능</p>\r\n                    <p>✔ 이어쓰기 2-3회 제공</p>\r\n                    <p>✔ 이어쓰기 및 이야기 완성 가능</p>\r\n                    <p>✔ 이야기 7개 이상 창작 가능</p>\r\n                    <p>(이야기 한개당 최대 길이 a4 2장)</p>\r\n                  </div>\r\n                \r\n              </Card>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <Modal\r\n            open={this.state.showMenu}\r\n            close={this.closeModal}\r\n            title='Payment'\r\n          >\r\n            {localStorage.getItem(\"isBill\") !== \"true\" ? (\r\n            <>\r\n              <div className='creditCard'>\r\n                <CreditCardInput  \r\n                  cardNumberInputProps={{\r\n                    value: this.state.cardNum,\r\n                    onChange: this.handleChange,\r\n                    name: \"cardNum\",\r\n                  }}\r\n                  cardExpiryInputProps={{\r\n                    value: this.state.cardExpire,\r\n                    onChange: this.handleChange,\r\n                    name: \"cardExpire\",\r\n                    onError: err => toast.error(err)\r\n                  }}\r\n                  cardCVCInputProps={{\r\n                    value: this.state.cardCvc,\r\n                    onChange: this.handleChange,\r\n                    name: \"cardCvc\",\r\n                    onError: err => toast.error(err)\r\n                  }}\r\n                  fieldClassName='input'\r\n\r\n                  fieldStyle= {{\r\n                    width:'100%',\r\n                  }}\r\n                  containerStyle={{\r\n                    borderBottom: '1px solid #ededed'\r\n                  }}\r\n                  \r\n                />\r\n              </div>\r\n              \r\n                <div className='ElementBox'>\r\n                  <p>이름</p>\r\n                  <input\r\n                    className='LabelElement'\r\n                    value={this.state.buyerName}\r\n                    onChange={this.handleChange}\r\n                    name='buyerName'\r\n                    maxLength='4'\r\n                  ></input>\r\n                </div>\r\n\r\n                <div className='ElementBox'>\r\n                  <p>비밀번호</p>\r\n                  <input\r\n                    className='PwElement'\r\n                    value={this.state.cardPwd}\r\n                    onChange={this.handleNumber}\r\n                    name='cardPwd'\r\n                    maxLength='2'\r\n                  ></input>\r\n                  <span><b>**</b></span>\r\n                </div>\r\n              \r\n              <div className='ElementBox'>\r\n                <p>주민번호</p>\r\n                <input\r\n                  className='BuyerElement'\r\n                  value={this.state.idNum}\r\n                  onChange={this.handleNumber}\r\n                  name='idNum'\r\n                  maxLength='6'\r\n                ></input>\r\n                <span> - <b>*******</b></span>\r\n              </div>\r\n              <div className=\"PriceBox\">\r\n                <p>₩{this.state.Price}</p>\r\n              </div>\r\n              <div style={payButton}>\r\n                <button className='creditCardButton' onClick={this.requestBill}>\r\n                결제하기\r\n                </button>\r\n              </div>\r\n            </>  \r\n            ) : (\r\n              <div style={payButton}>\r\n              <button className='changeButton' onClick={this.changeBill}>\r\n                  플랜 바꾸기\r\n              </button>\r\n            </div>\r\n            )}\r\n          </Modal>\r\n        </Box>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Membership;\r\n\r\nconst Card = styled.div`\r\n  text-align: center;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n  box-shadow: 5px 6px 8px rgba(0, 0, 0, 0.16);\r\n  border-radius: 15px;\r\n  /* border : 1px solid #ededed; */\r\n`;\r\n\r\nconst payButton = {\r\n  textAlign:'center',\r\n  paddingTop: '15px'\r\n}","import React, { useContext } from 'react';\r\nimport Header from \"../components/Header.js\";\r\nimport Footer from \"../components/Footer.js\";\r\nimport Price from \"../components/Membership.js\";\r\nimport { ResponsiveContext } from \"grommet\";\r\n\r\nconst Membership = () => {\r\n  const size = useContext(ResponsiveContext);\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Price sizes={size}/>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Membership;\r\n","import React, { Component } from 'react';\r\nimport {  Route, Switch } from 'react-router-dom';\r\nimport { Main, Membership } from '../pages/index.js';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main}/>\r\n        <Route exact path=\"/membership\" component={Membership}/>\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from '../shared/App.js';\r\nimport { ToastContainer, Flip} from 'react-toastify';\r\n\r\nconst Root = () => (\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App/>\r\n    <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss={false}\r\n        draggable\r\n        pauseOnHover\r\n        style={{fontSize : '0.85em'}}\r\n        transition={Flip}\r\n        \r\n      />\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Root;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport Root from './client/root.js';\r\nimport { Grommet } from 'grommet';\r\nimport { grommet } from 'grommet/themes';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Grommet theme={grommet}>\r\n    <Root />\r\n    </Grommet>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}